{"version":3,"sources":["Helpers/fetch.js","Actions/authActions.js","hooks/useForm.js","Components/auth/LoginScreen.js","Helpers/prepararEvento.js","Actions/eventActions.js","Components/ui/NavBar.js","Helpers/calendar-messages-es.js","Components/calendar/CalendarEvent.js","Actions/uiActions.js","Components/calendar/CalendarModal.js","Components/ui/AddNewButton.js","Components/ui/DeleteButton.js","Components/calendar/CalendarScreen.js","Routers/PrivateRoute.js","Routers/PublicRoute.js","Routers/RouterApp.js","Reducers/authReducer.js","Reducers/calendarReducer.js","Reducers/uiReducer.js","Reducers/rootReducer.js","Store/store.js","App/CalendarApp.js","index.js","Type/types.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","login","user","type","types","authLogin","payload","checkingFinish","authCheckingFinish","logout","authLogout","useForm","initialState","useState","formValues","setFormValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","correoIngreso","passwordIngreso","formLoginValues","handleLoginInputChange","nombreRegistro","correoRegistro","passwordRegistro","passwordRegistro2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","response","json","ok","setItem","jsonWebToken","Date","getTime","uid","errors","Swal","fire","msg","console","log","placeholder","onChange","prepararEvento","eventos","map","evento","end","moment","toDate","start","eventAddNewAction","event","eventAddNew","eventLoading","eventLoad","eventUpdateAction","eventUpdate","eventDeleteAction","eventDelete","eventClearActiveEventAction","eventClearActive","NavBar","useSelector","state","auth","onClick","clear","eventLogout","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","require","uiOpenModalAction","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initiEvent","notes","CalendarModal","modalOpen","ui","activeEvents","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","useEffect","closeModal","uiCloseModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","updateEvent","momentStart","momentEnd","isSameOrAfter","trim","length","getState","id","_id","minDate","autoComplete","rows","AddNewButton","DeleteButton","locale","localizer","momentLocalizer","CalendarScreen","events","lastView","setLastView","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","view","onSelectSlot","selectable","startAccessor","endAccessor","PrivateRoute","isLoggedIn","Component","component","rest","props","to","protoType","PropTypes","bool","isRequired","func","PublicRoute","RouterApp","logged","checking","exact","path","initalState","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","divRoot","document","getElementById","ReactDOM","render","eventStartAddNew","authStartLogin","authStartRegister","authStartTokenReNew"],"mappings":"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","file":"static/js/main.fb98098f.chunk.js","sourcesContent":["\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = \"GET\" ) =>\r\n{\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4011/api/auth/\r\n\r\n    if( method === \"GET\" )\r\n    {\r\n        return fetch( url );\r\n    }\r\n    else\r\n    {\r\n        return fetch( \r\n            \r\n            url, \r\n            { \r\n                method, \r\n                headers : { \"Content-type\" : \"application/json\" },\r\n                body : JSON.stringify( data )\r\n            } \r\n        );\r\n    };\r\n\r\n};\r\n\r\n\r\n\r\nconst fetchConToken = ( endpoint, data, method = \"GET\" ) =>\r\n{\r\n    \r\n    const url = `${ baseUrl }/${ endpoint }`; //localhost:4011/api/auth/\r\n\r\n    const token = localStorage.getItem( \"token\" ) || \"\";\r\n\r\n    if( method === \"GET\" )\r\n    {\r\n        return fetch( \r\n            \r\n            url,\r\n            {\r\n                method,\r\n                headers : { 'x-token': token }\r\n            }\r\n\r\n        );\r\n    }\r\n    else\r\n    {\r\n        return fetch( \r\n            \r\n            url, \r\n            { \r\n                method, \r\n                headers : { \"Content-type\" : \"application/json\", \"x-token\" : token },\r\n                body : JSON.stringify( data )\r\n            } \r\n        );\r\n    };\r\n\r\n};\r\n\r\n/////\r\n\r\nexport { fetchSinToken, fetchConToken };","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../Helpers/fetch';\r\nimport { types } from '../Type/types';\r\n\r\n//////\r\n\r\nconst startLogin = ( email, password ) =>\r\n{\r\n    return async ( dispatch ) => \r\n    {\r\n        try \r\n        {\r\n\r\n            const response = await fetchSinToken( \"auth\", { email, password }, \"POST\" );\r\n            const body = await response.json();\r\n\r\n            if( body.ok )\r\n            {\r\n                localStorage.setItem( \"token\", body.jsonWebToken );\r\n                localStorage.setItem( \"creacionToken\" , new Date().getTime() );\r\n\r\n                dispatch( login( { uid : body.uid, name : body.name } ) );\r\n            }\r\n            else\r\n            {\r\n\r\n                if( !body.errors )\r\n                {\r\n                    return Swal.fire( \"error\", body.msg, \"error\" );\r\n                };\r\n\r\n                if( body.errors.password )\r\n                {\r\n                    return Swal.fire( \"error\", body.errors.password.msg, \"error\" );\r\n                };\r\n\r\n                if( body.errors.email )\r\n                {\r\n                    return Swal.fire( \"error\", body.errors.email.msg, \"error\" );\r\n                };\r\n\r\n            };\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error );\r\n            return Swal.fire( \"error\", error, \"error\" );\r\n        };\r\n    };\r\n}\r\n\r\nconst login = ( user ) => ( { type : types.authLogin, payload : user } );\r\n\r\n\r\nconst starRegister = ( name, email, password ) =>\r\n{\r\n    \r\n    return async ( dispatch ) => \r\n    {\r\n       try \r\n       {\r\n\r\n            const response = await fetchSinToken( \"auth/register\", { name, email, password }, \"POST\" );\r\n            const data = await response.json();\r\n\r\n            if( data.ok )\r\n            {\r\n                \r\n                localStorage.setItem( \"token\", data.jsonWebToken );\r\n                localStorage.setItem( \"creacionToken\" , new Date().getTime() );\r\n\r\n                dispatch( login( { uid : data.uid, name : data.name } ) );\r\n\r\n                Swal.fire( \"Listo\", \"Usuario creado exitosamente\", \"success\" );\r\n                \r\n            }\r\n            else\r\n            {\r\n        \r\n\r\n                if( !data.errors )\r\n                {\r\n                    return Swal.fire( \"error\", data.msg, \"error\" );\r\n                };\r\n                \r\n                if( data.errors.name )\r\n                {\r\n                    return Swal.fire( \"error\", data.errors.name.msg, \"error\" );\r\n                }\r\n\r\n                if( data.errors.email )\r\n                {\r\n                    return Swal.fire( \"error\", data.errors.email.msg, \"error\" );\r\n                }\r\n\r\n                if( data.errors.password )\r\n                {\r\n                    return Swal.fire( \"error\", data.errors.password.msg, \"error\" );\r\n                }\r\n\r\n            \r\n            };\r\n       } \r\n       catch( error ) \r\n       {\r\n            console.log( error );\r\n            return Swal.fire( \"error\", error,\"error\" );\r\n       };\r\n\r\n    };\r\n};\r\n\r\n\r\nconst startChecking = () =>\r\n{\r\n    return async ( dispatch ) => \r\n    {\r\n\r\n        try \r\n        {\r\n            \r\n            const response = await fetchConToken( \"auth/revalidtoken\" );\r\n            const data = await response.json();\r\n    \r\n    \r\n            if( data.ok )\r\n            {\r\n                    \r\n                localStorage.setItem( \"token\", data.jsonWebToken );\r\n                localStorage.setItem( \"creacionToken\" , new Date().getTime() );\r\n    \r\n                dispatch( login( { uid : data.uid, name : data.name } ) );\r\n                    \r\n            }\r\n            else\r\n            {\r\n                dispatch( checkingFinish() );\r\n            };\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            \r\n        }\r\n\r\n    };\r\n};\r\n\r\n\r\nconst checkingFinish = () => ( { type : types.authCheckingFinish } );\r\n\r\n\r\nconst startLogout = () =>\r\n{\r\n\r\n    return ( dispatch ) =>\r\n    {\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n    };\r\n\r\n};\r\n\r\nconst logout = () => ( { type : types.authLogout } );\r\n\r\n\r\n////\r\n\r\nexport { startLogin, starRegister, startChecking, startLogout , login  };","import { useState } from \"react\"\n\n\n///////////////////////////////////////////////////////////////////////////////////////\n\n\nconst useForm = ( initialState = {} ) => \n{\n    const [ formValues, setFormValues ] = useState( initialState );\n\n    const reset = () => setFormValues( initialState );\n\n    const handleInputChange = ( { target } ) =>\n    {\n        setFormValues( { ...formValues, [ target.name ] : target.value } );\n    }\n\n    return [ formValues, handleInputChange, reset ];\n}\n\n////////////\n\nexport default useForm;\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { starRegister, startLogin } from '../../Actions/authActions';\r\nimport useForm from '../../hooks/useForm';\r\nimport \"../../Style/login.css\"\r\n\r\n/////\r\n\r\nconst LoginScreen = () => \r\n{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //////\r\n\r\n    const initLoginFormValues = \r\n    {\r\n        correoIngreso : \"king@gmail.com\",\r\n        passwordIngreso : \"123456\",\r\n    };\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( initLoginFormValues );\r\n\r\n    const { correoIngreso, passwordIngreso } = formLoginValues;\r\n\r\n    const handleLogin = ( e ) =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin( correoIngreso, passwordIngreso  ) );\r\n\r\n    };\r\n\r\n    /////////\r\n\r\n    const initRegisterFormValues = \r\n    {\r\n        nombreRegistro : \"\",\r\n        correoRegistro : \"\",\r\n        passwordRegistro : \"\",\r\n        passwordRegistro2 : \"\",\r\n    };\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( initRegisterFormValues );\r\n\r\n    const { nombreRegistro, correoRegistro, passwordRegistro, passwordRegistro2 } = formRegisterValues;\r\n\r\n    const handleRegister = ( e ) =>\r\n    {\r\n        e.preventDefault();\r\n        \r\n        if( passwordRegistro !== passwordRegistro2 )\r\n        {\r\n            return Swal.fire( \"error\", \"las contraseñas deben ser iguales\", \"error\" );\r\n        };\r\n\r\n        dispatch( starRegister( nombreRegistro, correoRegistro, passwordRegistro ) );\r\n\r\n    };\r\n\r\n    //////////\r\n\r\n  \r\n\r\n    ///////////////////////////////////////////////////////\r\n\r\n\r\n    return (\r\n\r\n            <div className=\"container login-container\">\r\n\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-md-6 login-form-1\">\r\n\r\n                        <h3>Ingreso</h3>\r\n\r\n                        <form onSubmit={ handleLogin }>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"email\" className=\"form-control\" placeholder=\"Correo\" name=\"correoIngreso\" value={ correoIngreso } onChange={ handleLoginInputChange } />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Contraseña\" name=\"passwordIngreso\" value={ passwordIngreso } onChange={ handleLoginInputChange } />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n    \r\n                    <div className=\"col-md-6 login-form-2\">\r\n\r\n                        <h3>Registro</h3>\r\n\r\n                        <form onSubmit={ handleRegister } >\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\"className=\"form-control\" placeholder=\"Nombre\" name=\"nombreRegistro\" value={ nombreRegistro } onChange={ handleRegisterInputChange } />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                 <input type=\"email\" className=\"form-control\" placeholder=\"Correo\" name=\"correoRegistro\" value={ correoRegistro } onChange={ handleRegisterInputChange } />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Contraseña\" name=\"passwordRegistro\" value={ passwordRegistro } onChange={ handleRegisterInputChange } />\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Repita la contraseña\" name=\"passwordRegistro2\" value={ passwordRegistro2 } onChange={ handleRegisterInputChange } />\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <input type=\"submit\" className=\"btnSubmit\"  value=\"Crear cuenta\" />\r\n                            </div>\r\n\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n};\r\n\r\n///////\r\n\r\nexport default LoginScreen;\r\n","import moment from \"moment\";\r\n\r\n\r\nconst prepararEvento = ( eventos = [] ) =>\r\n{\r\n\r\n   return eventos.map( ( evento ) => ({ \r\n\r\n        ...evento,\r\n        end : moment( evento.end ).toDate(),\r\n        start : moment( evento.start ).toDate(),\r\n\r\n   }) );\r\n\r\n\r\n};\r\n\r\n////\r\n\r\nexport { prepararEvento };","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../Helpers/fetch\";\r\nimport { prepararEvento } from \"../Helpers/prepararEvento\";\r\nimport { types } from \"../Type/types\";\r\n\r\n//////\r\n\r\nconst eventStartAddNew = ( evento ) =>\r\n{\r\n    return async ( dispatch, getState ) =>\r\n    {\r\n        try \r\n        {\r\n\r\n            const { uid, name } = getState().auth;\r\n\r\n            const response =  await fetchConToken( \"events\", evento, \"POST\" );\r\n\r\n            const data = await response.json();\r\n\r\n            if( data.ok )\r\n            {\r\n                \r\n                evento.id = data.evento.id;\r\n                evento.user = { _id : uid, name };\r\n                console.log( evento );\r\n                dispatch( eventAddNewAction( evento )  );\r\n            };\r\n\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n                console.log( error );\r\n        };\r\n\r\n    };\r\n};\r\n\r\nconst eventAddNewAction = ( event ) => ( { type : types.eventAddNew, payload : event } );\r\n\r\nconst eventStartLoading = () =>\r\n{\r\n    return async ( dispatch ) =>\r\n    {\r\n\r\n        try \r\n        {\r\n            const response = await fetchConToken( \"events\" );\r\n            const data = await response.json();\r\n    \r\n            const eventos =  prepararEvento( data.eventos );\r\n\r\n            dispatch( eventLoading( eventos ) );\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error );\r\n        };\r\n\r\n\r\n    };\r\n};\r\n\r\nconst eventLoading = ( eventos ) => ( { type : types.eventLoad, payload : eventos } );\r\n\r\nconst startEventUpdateAction = ( updateEvent ) =>\r\n{\r\n    return async ( dispatch, getState ) => \r\n    {\r\n\r\n        const { id } = getState().calendar.activeEvents;\r\n\r\n        try \r\n        {\r\n            const response =  await fetchConToken( `events/${ id }`, updateEvent , \"PUT\" ); \r\n            \r\n            const data = await response.json();\r\n\r\n            if( data.ok )\r\n            {\r\n                dispatch( eventUpdateAction( data.evento ) );\r\n            }\r\n            else\r\n            {\r\n                Swal.fire( \"error\",data.msg,\"error\" );\r\n            };\r\n\r\n        } \r\n        catch( error ) \r\n        { \r\n            console.log( error );\r\n        };\r\n\r\n    };\r\n};\r\n\r\nconst eventUpdateAction = ( event ) => ( { type : types.eventUpdate, payload : event } );\r\n\r\n\r\nconst startDeleteAction = () =>\r\n{\r\n    return  async ( dispatch, getState ) =>\r\n    {\r\n        try \r\n        {\r\n            const { id } = getState().calendar.activeEvents;\r\n\r\n            const response = await fetchConToken( `events/${ id }`, {} , \"DELETE\" );\r\n\r\n            const data = await response.json();\r\n\r\n            if( data.ok )\r\n            {\r\n                dispatch( eventDeleteAction() );\r\n            }\r\n            else\r\n            {\r\n                Swal.fire( \"error\", data.msg, \"error\" );\r\n            };\r\n\r\n\r\n        } \r\n        catch( error ) \r\n        {\r\n            console.log( error );\r\n        };\r\n    };\r\n};\r\n\r\nconst eventDeleteAction = () => ( { type : types.eventDelete } );\r\n\r\n//////////////////////////\r\n\r\nconst eventLogout = () => ( { type : types.eventLogout } );\r\n\r\nconst eventSetActiveAction = ( event ) => ( { type : types.eventSetActive, payload : event } );\r\n\r\nconst eventClearActiveEventAction = () => ( { type : types.eventClearActive } );\r\n\r\n\r\n/////\r\n\r\nexport \r\n{  \r\n    eventStartAddNew,\r\n    eventStartLoading,\r\n    startDeleteAction,\r\n    startEventUpdateAction,\r\n    eventSetActiveAction, \r\n    eventClearActiveEventAction,\r\n    eventLogout\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../Actions/authActions';\r\nimport { eventLogout } from '../../Actions/eventActions';\r\n\r\n//////\r\n\r\nconst NavBar = () => \r\n{\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>\r\n    {\r\n        dispatch( startLogout() );\r\n        dispatch( eventLogout() );\r\n    };\r\n\r\n    /////\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"navbar navbar-dark bg-dark mb4\">\r\n\r\n            <span className=\"navbar-brand\"> { name } </span>\r\n\r\n            <button onClick={ handleLogout } className=\"btn btn-outline-danger\">\r\n                \r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir </span>\r\n                \r\n            </button>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n////////\r\n\r\nexport default NavBar;\r\n","const messages = \r\n{\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};\r\n\r\nexport { messages };","import React from 'react';\r\n\r\n///////\r\n\r\nconst CalendarEvent = ( { event } ) => \r\n{\r\n    const { title, user:{ name } } = event;\r\n\r\n    /////\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> - { name }</span>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\n\r\n///////\r\n\r\nexport default CalendarEvent;\r\n","const { types } = require(\"../Type/types\");\r\n\r\n/////\r\n\r\nconst uiOpenModalAction = () => ( { type : types.uiOpenModal } );\r\n\r\nconst uiCloseModalAction = () => ( { type : types.uiCloseModal } );\r\n\r\n/////\r\n\r\nexport { uiOpenModalAction, uiCloseModalAction };","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal';\r\nimport \"../../Style/modal.css\";\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModalAction } from '../../Actions/uiActions';\r\nimport { eventClearActiveEventAction, eventStartAddNew,startEventUpdateAction } from '../../Actions/eventActions';\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst customStyles = \r\n{\r\n    content :\r\n    {\r\n\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\n//////\r\n\r\nconst now = moment().minutes( 0 ).seconds( 0 ).add( 1, \"hours\" );\r\n\r\nconst nowPlus1 = now.clone().add( 1,\"hours\" );\r\n\r\n//////\r\n\r\nconst initiEvent = \r\n{ \r\n    title : \"\",\r\n    notes : \"\",\r\n    start : now.toDate(),\r\n    end : nowPlus1.toDate()\r\n\r\n};\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nconst CalendarModal = () => \r\n{\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n\r\n    const { activeEvents } = useSelector( state => state.calendar );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n\r\n    const [ titleValid, setTitleValid ] = useState( true );\r\n\r\n    const [ formValues, setFormValues ] = useState( initiEvent );\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    ////////\r\n\r\n    useEffect( () => \r\n    {\r\n        if( activeEvents )\r\n        {\r\n            setFormValues( activeEvents );\r\n        }\r\n        else\r\n        {\r\n            setFormValues( initiEvent );\r\n        };\r\n        \r\n    }, [ activeEvents ] );\r\n\r\n    ///////\r\n\r\n    const handleInputChange = ( { target } ) =>\r\n    {\r\n        setFormValues( { ...formValues, [ target.name ] : target.value } );\r\n    };\r\n\r\n   ////////\r\n\r\n    const closeModal = ( event ) =>\r\n    {\r\n        dispatch( uiCloseModalAction() );\r\n        setFormValues( initiEvent );\r\n        dispatch( eventClearActiveEventAction() );\r\n    };\r\n\r\n    ///////\r\n\r\n    const handleStarDateChange = ( event ) =>\r\n    {\r\n        setDateStart( event );\r\n        \r\n        setFormValues( { ...formValues, start : event } );\r\n    };\r\n\r\n    ///////\r\n\r\n    const handleEndDateChange = ( event ) =>\r\n    {\r\n        setDateEnd( event );\r\n\r\n        setFormValues( { ...formValues, end : event } );\r\n    };\r\n\r\n    ////////\r\n\r\n    const handleSubmit = ( event ) =>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) )\r\n        {\r\n            return Swal.fire( \"Error\",\"Fecha fin debe der mayor a fecha inicio\",\"error\" );\r\n        };\r\n\r\n        if( title.trim().length < 2 )\r\n        {\r\n            //return Swal.fire( \"Error\",\"Titulo debe contener más de 2 caracteres\",\"error\" );\r\n            return setTitleValid( false );\r\n        };\r\n\r\n\r\n        if( activeEvents )\r\n        {\r\n            dispatch( startEventUpdateAction( formValues ) );\r\n        }\r\n        else\r\n        {\r\n            dispatch( eventStartAddNew ( formValues ) );\r\n        };\r\n\r\n        \r\n        setTitleValid( true );\r\n\r\n        closeModal();\r\n    }\r\n\r\n    ///////////////////////////////////////////////////////////////////////////////\r\n\r\n    return (\r\n\r\n\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n          //onAfterOpen={ afterOpenModal }\r\n          onRequestClose={ closeModal }\r\n          style={ customStyles }\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n        <h1> { activeEvents ? \"Editar evento\" : \"Nuevo evento\" } </h1>\r\n        <hr />\r\n\r\n        <form  onSubmit={ handleSubmit } className=\"container\">\r\n\r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n                <DateTimePicker className=\"form-control\" onChange={ handleStarDateChange } value={ dateStart } />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n            <label>Fecha y hora Termino</label>\r\n                <DateTimePicker className=\"form-control\" onChange={ handleEndDateChange } value={ dateEnd } minDate={ dateStart } />\r\n            </div>\r\n\r\n\r\n            <hr />\r\n\r\n\r\n            <div className=\"form-group\">\r\n\r\n                <label>Titulo y notas</label>\r\n\r\n                <input type=\"text\" className={ `form-control ${ !titleValid && \"is-invalid\" }` } placeholder=\"Título del evento\" name=\"title\" value={ title } onChange={ handleInputChange } autoComplete=\"off\" />\r\n\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"form-group\">\r\n\r\n                <textarea type=\"text\" className=\"form-control\" placeholder=\"Notas\" rows=\"5\" name=\"notes\" value={ notes } onChange={ handleInputChange } ></textarea>\r\n\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n\r\n            </div>\r\n\r\n\r\n            <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n\r\n        </form>\r\n\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\n////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport default CalendarModal\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModalAction } from '../../Actions/uiActions';\r\n\r\n/////\r\n\r\nconst AddNewButton = ( ) => \r\n{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    ////////\r\n\r\n    const handleClickNew = () =>\r\n    {\r\n        dispatch( uiOpenModalAction() );\r\n    };\r\n\r\n    ///////\r\n\r\n    return (\r\n\r\n        <button className=\"btn btn-primary fab\" onClick={ handleClickNew }>\r\n        <i className=\"fas fa-plus\"></i>\r\n            \r\n        </button>\r\n    );\r\n\r\n};\r\n\r\n//////\r\n\r\nexport { AddNewButton };\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startDeleteAction } from '../../Actions/eventActions';\r\n\r\n//////\r\n\r\nconst DeleteButton = () => \r\n{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    /////\r\n    \r\n    const handleDelete = () =>\r\n    {\r\n        dispatch( startDeleteAction() );\r\n    };\r\n\r\n    //////////////////\r\n\r\n    return (\r\n\r\n\r\n        <button className=\"btn btn-danger fab-danger\" onClick={ handleDelete }>\r\n            <i className=\"fas fa-trash\" ></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n\r\n\r\n    );\r\n};\r\n\r\n//////\r\n\r\nexport default DeleteButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport NavBar from '../ui/NavBar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { messages } from '../../Helpers/calendar-messages-es';\r\nimport \"moment/locale/es-mx\";\r\nimport CalendarEvent from './CalendarEvent';\r\nimport CalendarModal from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModalAction } from \"../../Actions/uiActions\";\r\nimport { eventClearActiveEventAction, eventSetActiveAction, eventStartLoading } from '../../Actions/eventActions';\r\nimport { AddNewButton } from '../ui/AddNewButton';\r\nimport DeleteButton from '../ui/DeleteButton';\r\n\r\n\r\n//////\r\n\r\nmoment.locale( \"es\" ); //cambia idioma moment\r\n\r\n//////\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n//////\r\n\r\n\r\nconst CalendarScreen = () => \r\n{\r\n  \r\n    const { events, activeEvents } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    ////\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) =>\r\n    {\r\n      \r\n        const style = \r\n        {   \r\n            backgroundColor : ( uid === event.user._id ) ? \"#367CF7\" : \"#c62020\", \r\n            borderRadius : \"0px\", \r\n            opacity : 0.8,\r\n            display : \"block\",\r\n            color : \"white\",\r\n\r\n        };\r\n\r\n        return { style };\r\n\r\n    };\r\n\r\n    /////\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const [ lastView, setLastView ] = useState( localStorage.getItem( \"lastView\" ) ||  \"month\" );\r\n\r\n    //////\r\n\r\n    useEffect(() =>\r\n    {\r\n\r\n        dispatch( eventStartLoading() );\r\n        \r\n\r\n    }, [ dispatch ])\r\n\r\n    /////\r\n\r\n    const onDoubleClick = ( e ) =>\r\n    {\r\n        dispatch( uiOpenModalAction() );\r\n    };\r\n\r\n    const onSelect = ( e ) =>\r\n    {\r\n        dispatch( eventSetActiveAction( e ) );\r\n        \r\n    };\r\n\r\n    const onViewChange = ( e ) =>\r\n    {\r\n        setLastView( e );\r\n        localStorage.setItem( \"lastView\", e );\r\n    };\r\n\r\n    const onSelectSlot = ( e ) =>\r\n    {\r\n        dispatch( eventClearActiveEventAction() );\r\n    };\r\n\r\n    //////\r\n\r\n    return (\r\n\r\n        <div className=\"calendar-screen\">\r\n\r\n            <NavBar/>\r\n\r\n\r\n            <Calendar \r\n\r\n                localizer={ localizer } \r\n                events={ events } \r\n                messages={ messages } \r\n                eventPropGetter={ eventStyleGetter } \r\n                components={ { event : CalendarEvent } }\r\n                onDoubleClickEvent = { onDoubleClick }\r\n                onSelectEvent = { onSelect }\r\n                onView = { onViewChange }\r\n                view={ lastView }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                startAccessor=\"start\" \r\n                endAccessor=\"end\" \r\n\r\n            />\r\n\r\n            <AddNewButton/>\r\n\r\n            { activeEvents && <DeleteButton/> }\r\n\r\n            <CalendarModal/>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n//////\r\n\r\nexport default CalendarScreen;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n////\r\n\r\nconst PrivateRoute = ( { isLoggedIn, component:Component, ...rest } ) => \r\n{\r\n\r\n    return (\r\n\r\n\r\n        <Route \r\n        \r\n        { ...rest } \r\n        \r\n        component={ ( props ) => ( ( isLoggedIn ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/login\" /> ) ) } \r\n        \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nPrivateRoute.protoType = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\n////\r\n\r\nconst PublicRoute = ( { isLoggedIn, component:Component, ...rest } ) => \r\n{\r\n\r\n    return (\r\n\r\n\r\n        <Route \r\n        \r\n        { ...rest } \r\n        \r\n        component={ ( props ) => ( ( !isLoggedIn ) ? ( <Component {...props} /> ) : ( <Redirect to=\"/\" /> ) ) } \r\n        \r\n        />\r\n\r\n    );\r\n\r\n};\r\n\r\n/////\r\n\r\nPublicRoute.protoType = {\r\n\r\n    isLoggedIn : PropTypes.bool.isRequired,\r\n    component : PropTypes.func.isRequired\r\n\r\n};\r\n\r\n/////\r\n\r\nexport default PublicRoute;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch , Redirect } from \"react-router-dom\";\r\nimport { startChecking } from '../Actions/authActions';\r\nimport LoginScreen from '../Components/auth/LoginScreen';\r\nimport CalendarScreen from '../Components/calendar/CalendarScreen';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\n  \r\n///////\r\n\r\nconst RouterApp = () => \r\n{\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { checking, logged } = useSelector( state => state.auth );\r\n\r\n\r\n    useEffect(() => \r\n    {\r\n      \r\n        dispatch( startChecking() );\r\n\r\n    }, [ dispatch ])\r\n    \r\n    \r\n\r\n    if( checking )\r\n    {\r\n        <h5>.....Espere.....</h5>\r\n    };\r\n \r\n\r\n    ///\r\n\r\n    return (\r\n\r\n        <Router>\r\n\r\n            <div>\r\n     \r\n                <Switch>\r\n\r\n                    <PublicRoute isLoggedIn={ logged } component={ LoginScreen } exact path=\"/login\" />\r\n\r\n                    <PrivateRoute isLoggedIn={ logged } component={ CalendarScreen } exact path=\"/\"  />\r\n                    \r\n                {/*\r\n\r\n                    <Route component={ LoginScreen } exact path=\"/login\" />\r\n\r\n                    <Route component={ CalendarScreen } exact path=\"/\"  />\r\n\r\n\r\n                */}\r\n                    <Redirect to=\"/\"/>\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n\r\n        </Router>\r\n    );\r\n};\r\n\r\n///////\r\n\r\nexport default RouterApp;\r\n","import { types } from \"../Type/types\";\r\n\r\n/////\r\n\r\nconst initialState = \r\n{\r\n    checking : true,\r\n    logged : false,\r\n    //uid : null,\r\n    //name : null\r\n\r\n};\r\n\r\n/////\r\n\r\nconst authReducer = ( state = initialState, action ) => \r\n{\r\n\r\n    //console.log( action );\r\n\r\n   switch( action.type ) \r\n   {\r\n\r\n       case types.authLogin : return { ...state, checking : false, logged : true ,...action.payload };\r\n\r\n       case types.authCheckingFinish : return { ...state, checking : false };\r\n\r\n       case types.authLogout : return { checking : false, logged : false };\r\n\r\n       default: return state;\r\n\r\n   };\r\n\r\n\r\n};\r\n\r\n/////\r\n\r\nexport { authReducer };\r\n","\r\nimport { types } from \"../Type/types\";\r\n\r\n///////\r\n/*\r\n{ \r\n    id : dsfsafasfadsf,\r\n    title : \"Dia de la mishi\", \r\n    start : moment().toDate(), \r\n    end : moment().add( 2, \"hours\" ).toDate() ,\r\n    user : { id : \"123\", name : \"Jose\" }\r\n} \r\n*/\r\n\r\nconst initialState = { events : [ ], activeEvents : null };\r\n\r\n///////\r\n\r\nconst calendarReducer = ( state = initialState, action ) => \r\n{\r\n   switch ( action.type ) \r\n   {\r\n       case types.eventAddNew : return { ...state, events : [ ...state.events, action.payload ] };\r\n\r\n       case types.eventSetActive : return { ...state, activeEvents : action.payload };\r\n\r\n       case types.eventClearActive : return { ...state, activeEvents : null };\r\n\r\n       case types.eventUpdate : \r\n       \r\n       return { ...state, events : state.events.map( \r\n           \r\n        ( event ) => event.id === action.payload.id ? action.payload : event\r\n        \r\n        ) };\r\n\r\n        case types.eventDelete : \r\n       \r\n        return { ...state, events : state.events.filter( \r\n            \r\n         ( event ) => event.id !== state.activeEvents.id \r\n         \r\n         ),\r\n\r\n         activeEvents : null\r\n        \r\n        };\r\n\r\n        case types.eventLoad : return { ...state, events : [ ...action.payload ] };\r\n        \r\n        case types.eventLogout : return { ...state, events : [], activeEvents : null  };\r\n\r\n        default: return state;\r\n   };\r\n\r\n};\r\n\r\n///////\r\n\r\nexport { calendarReducer }\r\n","import { types } from \"../Type/types\";\r\n\r\n///////\r\n\r\nconst initalState = \r\n{\r\n    modalOpen : false,\r\n};\r\n\r\n///////\r\n\r\nconst uiReducer = ( state = initalState, action ) =>\r\n{\r\n\r\n    switch ( action.type ) \r\n    {\r\n        case types.uiOpenModal: return { ...state, modalOpen : true };\r\n\r\n        case types.uiCloseModal: return { ...state, modalOpen : false };\r\n\r\n        default: return state;    \r\n    };\r\n\r\n};\r\n\r\n///////\r\n\r\nexport { uiReducer };","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from './uiReducer';\r\n\r\n/////\r\n\r\nconst rootReducer = combineReducers( \r\n    \r\n    \r\n    { \r\n        ui : uiReducer, \r\n        calendar : calendarReducer,\r\n        auth : authReducer\r\n\r\n    } \r\n    \r\n);\r\n\r\n/////\r\n\r\nexport { rootReducer };\r\n ","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport { rootReducer } from '../Reducers/rootReducer';\r\nimport thunk from 'redux-thunk'\r\n\r\n////////\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst store = createStore(\r\n\r\n    rootReducer,\r\n    composeEnhancers( applyMiddleware( thunk ) )\r\n);\r\n\r\n///////\r\n\r\nexport { store };\r\n","import React from 'react'\r\nimport RouterApp from '../Routers/RouterApp';\r\nimport { Provider } from 'react-redux'\r\nimport { store } from '../Store/store';\r\n\r\n//////\r\n\r\nconst CalendarApp = () => \r\n{\r\n\r\n    return (\r\n\r\n       <Provider store={ store }>\r\n            <RouterApp/>\r\n       </Provider>\r\n\r\n    );\r\n};\r\n\r\n/////\r\n\r\nexport default CalendarApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport CalendarApp from './App/CalendarApp';\nimport \"./Style/style.css\";\n//``\n\n//////\n\nconst divRoot = document.getElementById( \"root\" );\n\n//////\n\nReactDOM.render( <CalendarApp/>, divRoot );","\r\nconst types =\r\n{\r\n    uiOpenModal : \"[UI] open modal\",\r\n    uiCloseModal : \"[UI] close modal\",\r\n\r\n    eventSetActive: \"[EVENT] set active\",\r\n    eventStartAddNew : \"[EVENT] start add new\",\r\n    eventAddNew: \"[EVENT] add new\",\r\n    eventClearActive: \"[EVENT] clear active\",\r\n    eventUpdate: \"[EVENT] update event\",\r\n    eventDelete : \"[EVENT] delete event\",\r\n    eventLoad : \"[EVENT] load event\",\r\n    eventLogout : \"[EVENT] logout event\",\r\n\r\n    authCheckingFinish : \"[AUTH] finish cheking login state\",\r\n    authStartLogin : \"[AUTH] start login\",\r\n    authLogin : \"[AUTH] login\",\r\n    authStartRegister : \"[AUTH] start register\",\r\n    authStartTokenReNew : \"[AUTH] start token renew\",\r\n    authLogout : \"[AUTH] logout\"\r\n};\r\n\r\n//////\r\n\r\nexport { types };"],"sourceRoot":""}